let Router,postsCtrl,checkLoggedIn;_546‍.x([["default",()=>_546‍.o]]);_546‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_546‍.w("./posts.ctrl",[["*",null,function(v){postsCtrl=v}]]);_546‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);



const posts = new Router();


// 리팩토링 전
// posts.get('/', postsCtrl.list);
// posts.post('/', checkLoggedIn, postsCtrl.write);
// posts.get('/:id', postsCtrl.getPostById, postsCtrl.read);
// posts.delete('/:id', checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.remove);
// posts.patch('/:id', checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.update);

// 리팩토링 후( 개인적으로 가독성이 좋은 것으로 사용하면 됨 )
posts.get('/', postsCtrl.list);
posts.post('/', checkLoggedIn, postsCtrl.write);

const post = new Router(); // /api/posts/:id
post.get('/', postsCtrl.read);
post.delete('/', checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.remove);
post.patch('/', checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.update);

posts.use('/:id', postsCtrl.getPostById, post.routes());

_546‍.d(posts);